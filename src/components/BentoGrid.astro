<section class='am-bento-grid' id="section3">
  <h2 class='title title-top-left'>[ High Performance ]</h2>
  <h2 class='title title-top-right'>[ Pure Convenience ]</h2>
  <h2 class='title title-bottom-left'>[ Authentic Design ]</h2>
  <h2 class='title title-bottom-right'>[ Modern Safety ]</h2>
  <article class='container'>
    {
      Object.values({
        vid1: {
          srcVideo: './assets/grid/vid1.mp4',
          srcPoster: './assets/grid/vid1-poster.avif'
        },
        vid2: {
          srcVideo: './assets/grid/vid2.mp4',
          srcPoster: './assets/grid/vid2-poster.avif'
        },
        vid3: {
          srcVideo: '',
          srcPoster: './assets/grid/vid3-poster.avif'
        },
        vid4: {
          srcVideo: '',
          srcPoster: './assets/grid/vid4-poster.avif'
        },
        vid5: {
          srcVideo: './assets/grid/vid5.mp4',
          srcPoster: './assets/grid/vid5-poster.avif'
        },
        vid6: {
          srcVideo: '',
          srcPoster: './assets/grid/vid6-poster.avif'
        },
        vid7: {
          srcVideo: '',
          srcPoster: './assets/grid/vid7-poster.avif'
        }
      }).map(({ srcVideo, srcPoster }) => (
        <div class='item'>
          <video data-src={srcVideo} loop muted autoplay poster={srcPoster} />
        </div>
      ))
    }
  </article>
</section>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function () {
    const videos = document.querySelectorAll('video');

    const observer = new IntersectionObserver((entries, obs) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const video = entry.target;
          const $dataSrc = video.getAttribute('data-src');
          if ($dataSrc) {
            video.src = $dataSrc;
            video.load();
            video.play();
          }
          obs.unobserve(video);
        }
      });
    });

    videos.forEach(video => observer.observe(video));
  });
</script>

<style>
  .am-bento-grid {
    content-visibility: auto;
    min-height: 100vh;
    background: linear-gradient(to bottom, #fff, var(--secondary-color), #fff);
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    place-content: center;
    position: relative;
  }

  .title {
    position: absolute;
    color: var(--primary-color);
    margin-top: 12px;
    text-wrap: balance;
    line-height: 1.4;
    font-size: var(--space-s);
    --dis: 30px;

    @media (width >= 1700px) {
      font-size: var(--space-m);
    }
    @media (width >= 3050px) {
      font-size: var(--space-l);
      --dis: 70px;
    }
    @media (width >= 5050px) {
      font-size: var(--space-xl);
    }

    @media (width <= 1111px) and (orientation: portrait) {
      display: none;
    }

    @media (width <= 800px) and (orientation: landscape) {
      --dis: 20px;
    }
    @media (width <= 650px) and (orientation: landscape) {
      display: none;
    }

    &.title-top-right {
      top: var(--dis);
      right: var(--dis);
    }
    &.title-top-left {
      top: var(--dis);
      left: var(--dis);
    }
    &.title-bottom-right {
      bottom: var(--dis);
      right: var(--dis);
    }
    &.title-bottom-left {
      bottom: var(--dis);
      left: var(--dis);
    }
  }

  .container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    gap: 16px;
    width: 54%;
    height: 86vh;
    max-width: 1500px;

    @media (width >= 3100px) {
      width: 80%;
      max-width: 2400px;
      height: 66vh;
    }

    @media (width <= 1111px) and (orientation: portrait) {
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
      width: 90%;

      .item:nth-child(1) {
        grid-area: 1 / 1 / 2 / 2;
        grid-column: 1 / 2;
        grid-row: 1 / 3;
      }

      .item:nth-child(2) {
        grid-area: 2 / 2 / 3 / 3;
      }

      .item:nth-child(3) {
        grid-area: 1 / 2 / 2 / 3;
        grid-column: 2 / 3;
      }

      .item:nth-child(4) {
        grid-area: 3 / 1 / 4 / 2;
        grid-column: 1 / 3;
      }

      .item:nth-child(5) {
        grid-area: 4 / 1 / 5 / 2;
      }

      .item:nth-child(6) {
        grid-area: 5 / 1 / 6 / 2;
      }

      .item:nth-child(7) {
        grid-area: 4 / 2 / 5 / 3;
        grid-row: 4 / 6;
      }
    }

    @media (width <= 650px) and (orientation: landscape) {
      gap: 8px;
    }

    @media (width <= 450px) and (orientation: landscape) {
      gap: 4px;
    }

    .item {
      background-color: #0008;
      min-width: 150px;
      min-height: 150px;
      background-size: cover;
      background-position: center;
      position: relative;
      transition: filter 0.4s ease;
      border-radius: 12px;

      &:hover {
        &::after {
          opacity: 0.2;
        }
      }

      video {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        border-radius: inherit;
      }

      @media (width >= 3050px) {
        border-radius: 28px;
      }

      @media (width <= 1111px) and (orientation: landscape) {
        min-width: 100px;
        min-height: 100px;
      }
      @media (width <= 900px) and (orientation: landscape) {
        min-width: 80px;
        min-height: 80px;
        border-radius: 8px;
      }
      @media (width <= 650px) and (orientation: landscape) {
        min-width: 70px;
        min-height: 70px;
      }
      @media (width <= 550px) and (orientation: landscape) {
        min-width: 50px;
        min-height: 50px;
      }
      @media (width <= 450px) and (orientation: landscape) {
        min-width: 40px;
        min-height: 40px;
      }
      @media (width <= 1111px) and (orientation: portrait) {
        min-height: 70px;
      }

      &::before,
      &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 12px;
      }

      &::before {
        background-image: inherit;

        z-index: -1;
        filter: blur(30px) saturate(600%);
      }

      &::after {
        transition: opacity 0.4s ease-in-out;
        background-color: #fff;
        opacity: 0.1;
      }
    }
  }

  .item:nth-child(1) {
    grid-area: 1 / 1 / 2 / 2;
    grid-column: 1 / 2;
    grid-row: 1 / 3;
  }

  .item:nth-child(2) {
    grid-area: 1 / 4 / 2 / 5;
    grid-row: 1 / 3;
  }

  .item:nth-child(3) {
    grid-area: 2 / 2 / 3 / 3;
  }

  .item:nth-child(4) {
    grid-area: 2 / 3 / 3 / 4;
  }

  .item:nth-child(5) {
    grid-area: 1 / 2 / 2 / 3;
    grid-column: 2 / 4;
  }

  .item:nth-child(6) {
    grid-area: 3 / 1 / 4 / 2;
    grid-column: 1 / 3;
  }

  .item:nth-child(7) {
    grid-area: 3 / 3 / 4 / 4;
    grid-column: 3 / 5;
  }
</style>
